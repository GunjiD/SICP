					;Newton法による平方根


;被開関数（これからその平方根を取ろうとする値）の値と予測値の値から出発する
(define (sqrt-iter guess x)
  (if (good-enough? guess x)
      guess
      (sqrt-iter (improve guess x)
		 x)))

(define (average x y)
  (/ (+ x y) 2))

;予測値はそれと被開関数の前の予測値による商との平均値で改善される
(define (improve guess x)
  (average guess (/ x guess)))

;その二乗と被開関数の差が、前もって決めた許容値より小さくなるまで答えを改善する
(define (good-enough? guess x)
  (< (abs (- (square guess) x)) 0.001))

;常に、どんな数の平方根も１であると予測することができる（平方根の定義から）
(define (sqrt x)
  (sqrt-iter 1.0 x))

;sample
(sqrt 9)
(sqrt (+ 100 37))

#|
問題1.6

|#

#|
問題1.7
good-enough?は非常に小さい数の平方根を取るときには効果的ではない
実際の計算機では限られた精度で実行される。
このテストは非常に大きい数と小さい数では不適切である。
小さい数、大きい数の場合、どのようにテストが失敗するかの例を使ってこのことを説明せよ。
good-enough? を実装するもう一つの戦略は、ある次の繰り返しから次への guess の変化に注目し。
変化が予測値に比べ非常に小さくなったときである。こういう終了テストを使う平方根手続きを設計せよ。
|#

#|
A.
大きすぎ、小さすぎの場合は許容範囲の差がそもそも小さすぎてしまい、誤差がまるめられてしまったり
そのまま入力値が答えになってしまう
以下例
|#

(sqrt 100000000000000000001)
(sqrt 20000000000000000000000000000000000000000000000000000)

#|
答えみたら考えてたことと違ったっぽい。Gaucheだと挙動変わるかも？
大きすぎると計算が終わらない、って話だった。
小さすぎは誤差が出る（だと思われる）
|#
